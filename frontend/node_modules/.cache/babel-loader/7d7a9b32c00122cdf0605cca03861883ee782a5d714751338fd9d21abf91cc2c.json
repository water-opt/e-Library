{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\unknown\\\\Desktop\\\\LibraryManagementSystem\\\\client\\\\src\\\\components\\\\isLoginContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\n\n// Correct the typo in the context name\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IsLoginContext = /*#__PURE__*/createContext();\nexport const useRole = () => {\n  _s();\n  return useContext(IsLoginContext);\n};\n_s(useRole, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const IsLoginProvider = ({\n  children\n}) => {\n  _s2();\n  const [isLogin, setLogin] = useState(null);\n  return (\n    /*#__PURE__*/\n    // Use IsLoginContext.Provider instead of IsLoginProvider.Provider\n    _jsxDEV(IsLoginContext.Provider, {\n      value: {\n        isLogin,\n        setLogin\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s2(IsLoginProvider, \"lX+ro4gSKX7tzwfFVsigECvgu9w=\");\n_c = IsLoginProvider;\nexport default IsLoginContext;\nvar _c;\n$RefreshReg$(_c, \"IsLoginProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","IsLoginContext","useRole","_s","IsLoginProvider","children","_s2","isLogin","setLogin","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/unknown/Desktop/LibraryManagementSystem/client/src/components/isLoginContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\n// Correct the typo in the context name\r\nconst IsLoginContext = createContext();\r\n\r\nexport const useRole = () => useContext(IsLoginContext);\r\n\r\nexport const IsLoginProvider = ({ children }) => {\r\n  const [isLogin, setLogin] = useState(null);\r\n\r\n  return (\r\n    // Use IsLoginContext.Provider instead of IsLoginProvider.Provider\r\n    <IsLoginContext.Provider value={{ isLogin, setLogin }}>\r\n      {children}\r\n    </IsLoginContext.Provider>\r\n  );\r\n};\r\n\r\nexport default IsLoginContext;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,gBAAGL,aAAa,CAAC,CAAC;AAEtC,OAAO,MAAMM,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAML,UAAU,CAACG,cAAc,CAAC;AAAA;AAACE,EAAA,CAA3CD,OAAO;AAEpB,OAAO,MAAME,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC/C,MAAM,CAACC,OAAO,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE1C;IAAA;IACE;IACAG,OAAA,CAACC,cAAc,CAACQ,QAAQ;MAACC,KAAK,EAAE;QAAEH,OAAO;QAAEC;MAAS,CAAE;MAAAH,QAAA,EACnDA;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACc;EAAC;AAE9B,CAAC;AAACR,GAAA,CATWF,eAAe;AAAAW,EAAA,GAAfX,eAAe;AAW5B,eAAeH,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}