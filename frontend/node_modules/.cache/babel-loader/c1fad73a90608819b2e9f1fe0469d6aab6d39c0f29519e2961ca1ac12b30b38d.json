{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\unknown\\\\Desktop\\\\New folder\\\\Library Management System\\\\frontend\\\\src\\\\pages\\\\recoverAccount.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './styles/userManageStyles.css';\nimport RoleContext from '../components/RoleContext';\nimport IsLoginCotext from '../components/IsLoginContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const {\n    setRole\n  } = useContext(RoleContext);\n  const {\n    setLogin\n  } = useContext(IsLoginCotext);\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('/api/user/recovery', {\n        email\n      });\n      if (response.status === 404) {\n        setError('User not found ..');\n      } else if (response.status == 500) {\n        setError('Internal server error ..');\n      } else {\n        alert('Email Sent. Please check the Email.');\n        navigate('/user/login');\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"p1\", {\n      children: \"Account Recovery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red',\n        fontWeight: 'bold',\n        marginBottom: '10px',\n        width: '465px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true,\n        className: \"login-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"*fill all the required fields.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-button\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"4R9XrztHJUyt16MI9mcHj2fJUsw=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useContext","axios","useNavigate","RoleContext","IsLoginCotext","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","error","setError","setRole","setLogin","navigate","handleSubmit","event","preventDefault","response","post","status","alert","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","fontWeight","marginBottom","width","onSubmit","type","id","placeholder","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["C:/Users/unknown/Desktop/New folder/Library Management System/frontend/src/pages/recoverAccount.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './styles/userManageStyles.css';\r\nimport RoleContext from '../components/RoleContext';\r\nimport IsLoginCotext from '../components/IsLoginContext'; \r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const { setRole } = useContext(RoleContext);\r\n  const { setLogin } = useContext(IsLoginCotext);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault(); \r\n\r\n    try {\r\n      const response = await axios.post('/api/user/recovery', { email });\r\n\r\n      if (response.status === 404) {\r\n        setError('User not found ..'); \r\n      } else if (response.status == 500) {\r\n        setError('Internal server error ..');\r\n      } else {\r\n        alert('Email Sent. Please check the Email.')\r\n        navigate('/user/login')\r\n      }\r\n\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-form\">\r\n      <p1>Account Recovery</p1>\r\n      {error && <p style={{ color: 'red', fontWeight: 'bold', marginBottom: '10px', width: '465px' }}>{error}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n          className=\"login-input\"\r\n        />\r\n        <p>*fill all the required fields.</p>\r\n        <button type='submit' className=\"login-button\">Next</button>\r\n      </form>\r\n \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}